### STILL IN PROGRESS ###

Небходимы классы для работы с системными элементами:
- index.php (главная страница)
- more.php (страница с дополнительной информацией о фильме)
- chose.php (страница с избранным)

- Entity (абстрактный)
- Controller (абстрактный)
- Render (класс, отвечающий за рендер страниц)
- DatabaseConnection-singleton (класс, отвечающий за подключение к бд)
- Config (класс отвечающий за настройки проекта)


Необходимые классы для работы с элементами бизнес-логики:
- MovieEntity, DirectorEntity, GenreEntity, DirectorEntity (классы, содержащие информацию из бд)
- UserController (класс, обрабатывающий GET и POST запросы, а так же использует запросы из наших сервисов ( MovieService, DirectorService, GenreService, DirectorService))
- MovieService, DirectorService, GenreService, DirectorService ( классы, являющиеся прослойкой между бд и контроллером, тут пишутся запросы к бд)
- Желательно: MovieServiceInterface, DirectorServiceInterface, GenreServiceInterface, DirectorServiceInterface (чтобы указать, какие методы  нужно реализовать классам выше, к примеру - getAllFilms )



Краткое текстовое пояснение:

Наш проект организует работу сайта с каталогами фильмов. Клиент заходит на страницу index.php - запускается подключение к бд с помощью DatabaseConnetion. Далее класс UserController обрабатывает пришедший к нему запрос 
( если запросов нет, просто получаем весь список фильмов с помощью классов MovieEntity и MovieService). Далее передаем классу Render данные ( в зависимости от запроса) и рендерим layout с контентной частью.
